// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using amazon_clone.DataAccess.Data;

#nullable disable

namespace amazon_clone.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("amazon_clone.Models.Models.ClothSize", b =>
                {
                    b.Property<int>("SizeID")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("SizeID");

                    b.ToTable("tbl_ClothesSizes", (string)null);
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ClothesSizes", b =>
                {
                    b.Property<int>("ClothesProductID")
                        .HasColumnType("int");

                    b.Property<int>("ClothesSizeID")
                        .HasColumnType("int");

                    b.HasKey("ClothesProductID", "ClothesSizeID");

                    b.HasIndex("ClothesSizeID");

                    b.ToTable("ClothesSizes");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.PersonGender", b =>
                {
                    b.Property<int>("GenderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderID"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("GenderID");

                    b.ToTable("tbl_Genders", (string)null);
                });

            modelBuilder.Entity("amazon_clone.Models.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeleteDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("tbl_Products", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ProductCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("tbl_ProductCategories", (string)null);
                });

            modelBuilder.Entity("amazon_clone.Models.Models.WishList", b =>
                {
                    b.Property<int>("WishListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishListID"));

                    b.HasKey("WishListID");

                    b.ToTable("tbl_WishLists", (string)null);
                });

            modelBuilder.Entity("amazon_clone.Models.Models.WishListProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ListID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ListID");

                    b.HasIndex("ProductID");

                    b.ToTable("tbl_WishListsProducts", (string)null);
                });

            modelBuilder.Entity("amazon_clone.Models.Models.CustomerProduct", b =>
                {
                    b.HasBaseType("amazon_clone.Models.Models.Product");

                    b.Property<int>("CustomerProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerProductID"));

                    b.ToTable("tbl_CustomerProducts", (string)null);
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ClothesProduct", b =>
                {
                    b.HasBaseType("amazon_clone.Models.Models.CustomerProduct");

                    b.Property<int>("ClothesProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClothesProductID"));

                    b.Property<int>("TargetGenderID")
                        .HasColumnType("int");

                    b.HasIndex("TargetGenderID");

                    b.ToTable("tbl_ClothesProducts", (string)null);
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ClothSize", b =>
                {
                    b.OwnsOne("amazon_clone.Models.Models.CreationDetails", "SizeCreationDetails", b1 =>
                        {
                            b1.Property<int>("ClothSizeSizeID")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("ClothSizeSizeID");

                            b1.ToTable("tbl_ClothesSizes");

                            b1.WithOwner()
                                .HasForeignKey("ClothSizeSizeID");
                        });

                    b.Navigation("SizeCreationDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ClothesSizes", b =>
                {
                    b.HasOne("amazon_clone.Models.Models.ClothesProduct", "ClothesProduct")
                        .WithMany("ClothesSizes")
                        .HasForeignKey("ClothesProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("amazon_clone.Models.Models.ClothSize", "ClothesSize")
                        .WithMany("ClothesSizes")
                        .HasForeignKey("ClothesSizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClothesProduct");

                    b.Navigation("ClothesSize");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.Product", b =>
                {
                    b.HasOne("amazon_clone.Models.Models.ProductCategory", "Category")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("CategoryID");

                    b.OwnsOne("amazon_clone.Models.Models.CreationDetails", "ProductCreationDetails", b1 =>
                        {
                            b1.Property<int>("ProductID")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("ProductID");

                            b1.ToTable("tbl_Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductID");
                        });

                    b.Navigation("Category");

                    b.Navigation("ProductCreationDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ProductCategory", b =>
                {
                    b.OwnsOne("amazon_clone.Models.Models.CreationDetails", "CategoryCreationDetails", b1 =>
                        {
                            b1.Property<int>("ProductCategoryCategoryID")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("ProductCategoryCategoryID");

                            b1.ToTable("tbl_ProductCategories");

                            b1.WithOwner()
                                .HasForeignKey("ProductCategoryCategoryID");
                        });

                    b.Navigation("CategoryCreationDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("amazon_clone.Models.Models.WishList", b =>
                {
                    b.OwnsOne("amazon_clone.Models.Models.CreationDetails", "CreationDetails", b1 =>
                        {
                            b1.Property<int>("WishListID")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("WishListID");

                            b1.ToTable("tbl_WishLists");

                            b1.WithOwner()
                                .HasForeignKey("WishListID");
                        });

                    b.Navigation("CreationDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("amazon_clone.Models.Models.WishListProduct", b =>
                {
                    b.HasOne("amazon_clone.Models.Models.WishList", "WishList")
                        .WithMany("WishListsProducts")
                        .HasForeignKey("ListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("amazon_clone.Models.Models.CustomerProduct", "CustomerProduct")
                        .WithMany("WishListsProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerProduct");

                    b.Navigation("WishList");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.CustomerProduct", b =>
                {
                    b.HasOne("amazon_clone.Models.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("amazon_clone.Models.Models.CustomerProduct", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ClothesProduct", b =>
                {
                    b.HasOne("amazon_clone.Models.Models.CustomerProduct", null)
                        .WithOne()
                        .HasForeignKey("amazon_clone.Models.Models.ClothesProduct", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("amazon_clone.Models.Models.PersonGender", "TargetGender")
                        .WithMany("ClothesProducts")
                        .HasForeignKey("TargetGenderID");

                    b.Navigation("TargetGender");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ClothSize", b =>
                {
                    b.Navigation("ClothesSizes");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.PersonGender", b =>
                {
                    b.Navigation("ClothesProducts");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ProductCategory", b =>
                {
                    b.Navigation("CategoryProducts");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.WishList", b =>
                {
                    b.Navigation("WishListsProducts");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.CustomerProduct", b =>
                {
                    b.Navigation("WishListsProducts");
                });

            modelBuilder.Entity("amazon_clone.Models.Models.ClothesProduct", b =>
                {
                    b.Navigation("ClothesSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
